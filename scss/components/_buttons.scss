@if (components(buttons) == true) {

/* ==========================================================================
   COMPONENTS / BUTTONS
   ========================================================================== */

// Predefine the variable below in order to alter and enable specific features.
$buttons-namespace            : 'c-button' !default;


/**
 * 1. Allow us to style box model properties.
 * 2. Line different sized buttons up a little nicer.
 * 3. Make buttons inherit font styles (often necessary when styling `input`s as
 *    buttons).
 * 4. Reset/normalize some styles.
 * 5. Force all button-styled elements to appear clickable.
 */

.#{$namespace}#{$buttons-namespace} {
  display: inline-block; /* [1] */
  vertical-align: middle; /* [2] */
  margin: 0; /* [4] */
  @include space(padding-top, 0.5);
  @include space(padding-right);
  @include space(padding-bottom, 0.5);
  @include space(padding-left);
  font: inherit; /* [3] */
  text-align: center; /* [4] */
  text-decoration: none;
  cursor: pointer; /* [5] */
  transition: all 300ms ease-in-out;
}





/* Size variants
   ========================================================================== */

.#{$namespace}#{$buttons-namespace}--small {
  @include space(padding-top, 0.25);
  @include space(padding-right, 0.5);
  @include space(padding-bottom, 0.25);
  @include space(padding-left, 0.5);
}

.#{$namespace}#{$buttons-namespace}--large {
  @include space(padding-top);
  @include space(padding-right, 1.5);
  @include space(padding-bottom);
  @include space(padding-left, 1.5);
}

.#{$namespace}#{$buttons-namespace}--fit {
  width: 100%;
}





/* Style variants
   ========================================================================== */

.#{$namespace}#{$buttons-namespace}--rounded {
  border-radius: $base-ui-radius;
}

.#{$namespace}#{$buttons-namespace}--pill {
  border-radius: 3rem;
}

.#{$namespace}#{$buttons-namespace}--disabled,
.#{$namespace}#{$buttons-namespace}[disabled] {
  opacity       : 0.5;
  pointer-events: none;
}





/* Ghost buttons
   ========================================================================== */

/**
 * Ghost buttons have see-through backgrounds and are bordered.
 */

// Predefine the variable below in order to alter and enable specific features.
$button-ghost-border-width: 2px;
$button-ghost-spacing     : $button-ghost-border-width * 0.75 !default;


.#{$namespace}#{$buttons-namespace}--ghost {

  @include space(padding-top, $lines: $base-spacing-unit-small, $border: $button-ghost-spacing);
  @include space(padding-right, $lines: $base-spacing-unit, $border: $button-ghost-spacing);
  @include space(padding-bottom, $lines: $base-spacing-unit-small, $border: $button-ghost-spacing);
  @include space(padding-left, $lines: $base-spacing-unit, $border: $button-ghost-spacing);
  border: $button-ghost-border-width solid currentColor;

  &,
  &:hover,
  &:active,
  &:focus {
    background: none;
  }

  &.#{$namespace}#{$buttons-namespace}--small {
    @include space(padding-top, $lines: $base-spacing-unit-tiny, $border: $button-ghost-border-width);
    @include space(padding-right, $lines: $base-spacing-unit-small, $border: $button-ghost-border-width);
    @include space(padding-bottom, $lines: $base-spacing-unit-tiny, $border: $button-ghost-border-width);
    @include space(padding-left, $lines: $base-spacing-unit-small, $border: $button-ghost-border-width);
  }

  &.#{$namespace}#{$buttons-namespace}--large {
    @include space(padding-top, $lines: $base-spacing-unit-large, $border: $button-ghost-border-width);
    @include space(padding-right, $lines: $base-spacing-unit-small, $border: $button-ghost-border-width);
    @include space(padding-bottom, $lines: $base-spacing-unit-large, $border: $button-ghost-border-width);
    @include space(padding-left, $lines: $base-spacing-unit-small, $border: $button-ghost-border-width);
  }

}





/* Color variants
   ========================================================================== */

@each $type, $color in $colors {

  @if ($type == 'black') or ($type == 'white') or ($type == 'primary') or ($type == 'secondary') or ($type == 'action') or ($type == 'success') or ($type == 'error') or ($type == 'warning') or ($type == 'info') {

    .#{$namespace}#{$buttons-namespace}--#{$type} {

      background-color: $color;

      &,
      &:hover,
      &:active,
      &:focus {
        text-decoration: none; /* [4] */
        color: color-invert($color);
      }

      &:hover,
      &:focus {
        background-color: darken($color, 5%);
      }

      &.#{$namespace}#{$buttons-namespace}--ghost {

        color: $color;

        &,
        &:hover,
        &:active,
        &:focus {
          background: none;
        }

        &:hover,
        &:focus {
          color: darken($color, 10%);
        }

      }

    }

  }

}

}//endif