//------------------------------------\\
    // SETTINGS / COLORS
//------------------------------------\\

// Our brand and project colours are held in maps. Access these colours using:
//
//  color($key)
//
// For example:
//
//  .foo {
//    color: color(brand);
//  }

$colors: (
  'text'               : rgba(0,0,0,0.8),
  'text-soft'          : rgba(0,0,0,0.6),
  'text-muted'         : rgba(0,0,0,0.44),
  'background'         : #fff,
  'primary'            : #378bb5,
  'primary-highlight'  : lighten(#378bb5, 5%),
  'primary-shadow'     : darken(#378bb5, 5%),
  'secondary'          : #abc123,
  'secondary-highlight': lighten(#abc123, 5%),
  'secondary-shadow'   : darken(#abc123, 5%),
  'black'              : #000,
  'white'              : #fff,
  'ui-light'           : rgba(0,0,0,0.0625),
  'ui-medium'          : rgba(0,0,0,0.125),
  'ui-dark'            : rgba(0,0,0,0.25),
  'action'             : #378bb5,
  'error'              : #fa5252,
  'warning'            : #ffa94d,
  'info'               : #4dadf7,
  'success'            : #40c057
) !default;





// Colors map reader
// ===========================================

// Function to get colour values instead of using nested `map-gets`.
//
// Usage:
//
//  .foo {
//    color: color(<key>);
//  }
//

@function color($key) {

  @if map-has-key($colors, $key) {
    @return map-get($colors, $key);
  }

  @warn "Unknown `#{$key}` in $colors.";
  @return null;

}