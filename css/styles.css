@charset "UTF-8";
/* ==========================================================================
   GENERIC / RESET
   ========================================================================== */
/*
 * Normalization
 */
:root {
  -ms-overflow-style: -ms-autohiding-scrollbar;
  overflow-y: scroll;
  -webkit-text-size-adjust: 100%;
}

audio:not([controls]) {
  display: none;
}

button {
  overflow: visible;
}

details {
  display: block;
}

input[type="number"] {
  width: auto;
}

input[type="search"] {
  -webkit-appearance: textfield;
}

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

main {
  display: block;
}

summary {
  display: block;
}

pre {
  overflow: auto;
}

progress {
  display: inline-block;
}

template {
  display: none;
}

textarea {
  overflow: auto;
}

[hidden] {
  display: none;
}

/*
 * Universal inheritance
 */
*,
::before,
::after {
  box-sizing: inherit;
  vertical-align: inherit;
}

* {
  font-size: inherit;
  line-height: inherit;
}

::before,
::after {
  text-decoration: inherit;
}

/**
 * Specify the border style and width of all elements.
 */
*,
::before,
::after {
  border-style: solid;
  border-width: 0;
}

/**
 * Remove the margin and padding of all elements.
 */
* {
  margin: 0;
  padding: 0;
}

/**
 * Specify the progress cursor of updating elements.
 */
[aria-busy="true"] {
  cursor: progress;
}

/**
 * Specify the pointer cursor of trigger elements.
 */
[aria-controls] {
  cursor: pointer;
}

/**
 * Specify the unstyled cursor of disabled, not-editable, or otherwise inoperable
 * elements.
 */
[aria-disabled] {
  cursor: default;
}

/**
 * Specify the style of visually hidden yet accessible elements.
 */
[hidden][aria-hidden="false"] {
  clip: rect(0 0 0 0);
  display: inherit;
  position: absolute;
}

[hidden][aria-hidden="false"]:focus {
  clip: auto;
}

/**
 * Specify the background color of form elements.
 */
button,
input,
select,
textarea {
  background-color: transparent;
}

/**
 * Specify the inherited color and font of form elements.
 */
button,
input,
select,
textarea {
  color: inherit;
  font-family: inherit;
  font-style: inherit;
  font-weight: inherit;
}

label {
  vertical-align: top;
}

/**
 * Specify the resizability of textareas.
 */
textarea {
  resize: vertical;
}

/**
 * Specify the standard appearance of selects.
 */
select {
  -moz-appearance: none;
  -webkit-appearance: none;
}

select::-ms-expand {
  display: none;
}

select::-ms-value {
  color: currentColor;
}

[type="radio"],
[type="checkbox"] {
  vertical-align: middle !important;
}

/* ==========================================================================
   GENERIC / BOX-SIZING
   ========================================================================== */
/**
 * Set the global `box-sizing` state to `border-box`.
 *
 * https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice
 * http://paulirish.com/2012/box-sizing-border-box-ftw
 */
html {
  box-sizing: border-box;
}

*, *::before, *::after {
  box-sizing: inherit;
}

/* ==========================================================================
   GENERIC / SELECTIONS
   ========================================================================== */
/**
 * 1. Customize `background` for text selections.
 * 2. Remove `text-shadow` selection highlight - http://cbrac.co/Q6swON
 */
::-moz-selection {
  color: #fff;
  background-color: #378bb5;
  /* 1 */
  text-shadow: none;
  /* 2 */
}

::selection {
  color: #fff;
  background-color: #378bb5;
  /* 1 */
  text-shadow: none;
  /* 2 */
}

/**
 * Change `background` for text selections when browser is unfocused.
 */
::-moz-selection:window-inactive {
  background-color: #d0d0d0;
}
::selection:window-inactive {
  background-color: #d0d0d0;
}

/**
* Remove `background` on images when selected.
*/
img::-moz-selection {
  background-color: transparent;
}
img::selection {
  background-color: transparent;
}

img::-moz-selection {
  background-color: transparent;
}

/* ==========================================================================
   GENERIC / SHARED
   ========================================================================== */
/**
 * Shared declarations for certain elements.
 */
/**
 * Where `margin-bottom` is concerned,this value will be the same as the
 * base line-height. This allows us to keep a consistent vertical rhythm.
 * As per: csswizardry.com/2012/06/single-direction-margin-declarations
 *
 * Always declare margins in the same direction:
 * csswizardry.com/2012/06/single-direction-margin-declarations
 */
ul, ol, dl,
blockquote, p, address,
table,
fieldset, legend, figure, details,
pre {
  margin-bottom: 1.5rem;
}

/**
 * Where `margin-left` is concerned we want to try and indent certain elements
 * by a consistent amount. Define that amount once,here.
 */
ul, ol {
  margin-left: 1.5rem;
}

/* ==========================================================================
   ELEMENTS / PAGE
   ========================================================================== */
/**
 * Simple page-level setup.
 *
 * 1. Ensure the page always fills at least the entire height of the viewport.
 * 2. Clip the left/right edges if it overflows the area
 * 3. Force scrollbars to always be visible to prevent awkward ÔÇÿjumpsÔÇÖ when
 *    navigating between pages that do/do not have enough content to produce
 *    scrollbars naturally.
 * 4. Set the default `font-size` and `line-height` for the entire project,
 *    sourced from our default variables. The `font-size` is calculated to exist
 *    in ems, the `line-height` is calculated to exist unitlessly.
 * 5. Prevent certain mobile browsers from automatically zooming fonts.
 * 6. Fonts on OSX will look more consistent with other systems that do not
 *    render text using sub-pixel anti-aliasing.
 */
html {
  min-height: 100%;
  /* [1] */
  overflow-x: hidden;
  /* [2] */
  overflow-y: scroll;
  /* [3] */
  font-family: Georgia, Times, "Times New Roman", serif;
  font-size: 1em;
  /* [4] */
  line-height: 1.5;
  /* [4] */
  font-weight: 400;
  color: rgba(0, 0, 0, 0.8);
  background-color: #fff;
  -webkit-text-size-adjust: 100%;
  /* [5] */
  -ms-text-size-adjust: 100%;
  /* [5] */
}
@media (min-width: 60em) {
  html {
    font-size: 125%;
    /* [4] */
  }
}

/**
 * 1. Turn on kerning, standard ligatures, and proportional, oldstyle numerals
 *    Turn off all other ligatures, tabular, lining numerals, and alternates
 *    Uses same settings for tables
 */
html,
body,
table {
  -webkit-font-feature-settings: "kern" 1, "liga" 1, "calt" 1, "pnum" 1, "tnum" 0, "onum" 1, "lnum" 0, "dlig" 0;
          font-feature-settings: "kern" 1, "liga" 1, "calt" 1, "pnum" 1, "tnum" 0, "onum" 1, "lnum" 0, "dlig" 0;
  /* [1] */
}

/**
 * 1. Ensure the page always fills at least the entire height of the viewport.
 * 2. Show hyphens for every browser supporting it and break lines in every other
 *    browser.
 */
body {
  min-height: 100%;
  /* [1] */
  overflow-wrap: break-word;
  word-wrap: break-word;
  -webkit-hyphen: auto;
  -ms-hyphen: auto;
  -moz-hyphen: auto;
  hyphen: auto;
  /* [2] */
}

/* ==========================================================================
   ELEMENTS / HEADINGS
   ========================================================================== */
/**
 * Simple default styles for headings 1 through 6. Anything more opinionated
 * should likely be applied via classes (see:
 * http://csswizardry.com/2016/02/managing-typography-on-large-apps/).
 */
h1, h2, h3, h4, h5, h6, .u-h1-size, .u-h2-size, .u-h3-size, .u-h4-size, .u-h5-size, .u-h6-size, .u-heading {
  font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;
  font-weight: 700;
  word-wrap: break-word;
  color: rgba(0, 0, 0, 0.8);
}
h1 a, h2 a, h3 a, h4 a, h5 a, h6 a, .u-h1-size a, .u-h2-size a, .u-h3-size a, .u-h4-size a, .u-h5-size a, .u-h6-size a, .u-heading a {
  font-weight: inherit;
}
h1 small, h2 small, h3 small, h4 small, h5 small, h6 small, .u-h1-size small, .u-h2-size small, .u-h3-size small, .u-h4-size small, .u-h5-size small, .u-h6-size small, .u-heading small {
  display: table;
  height: 1.5rem;
  vertical-align: baseline;
  font-size: 75%;
  line-height: 1;
  color: rgba(0, 0, 0, 0.44);
}
@media (min-width: 45em) {
  h1 small, h2 small, h3 small, h4 small, h5 small, h6 small, .u-h1-size small, .u-h2-size small, .u-h3-size small, .u-h4-size small, .u-h5-size small, .u-h6-size small, .u-heading small {
    display: inline;
  }
}

h1 {
  margin-bottom: 1.5rem;
  font-size: 3.1875rem;
  line-height: 4.5rem;
}

h2 {
  margin-bottom: 1.5rem;
  font-size: 2.375rem;
  line-height: 3rem;
}

h3 {
  margin-bottom: 1.5rem;
  font-size: 1.75rem;
  line-height: 3rem;
}

h4 {
  margin-bottom: 1.5rem;
  font-size: 1.3125rem;
  line-height: 1.5rem;
}

h5 {
  font-size: 1rem;
  line-height: 1.5rem;
}

h6 {
  font-size: 1rem;
  line-height: 1.5rem;
}

/* ==========================================================================
   ELEMENTS / TYPOGRAPHY
   ========================================================================== */
/**
 * http://meyerweb.com/eric/thoughts/2012/12/17/where-to-avoid-css-hyphenation
 */
abbr,
acronym,
blockquote,
code,
dir,
kbd,
listing,
plaintext,
q,
samp,
tt,
var,
xmp {
  -webkit-hyphen: none;
  -ms-hyphen: none;
  -moz-hyphen: none;
  hyphen: none;
}

/**
 * For use in smallprint etc.
 */
small {
  font-size: 0.75rem;
  line-height: 1;
}

/**
 * 1. Change all letters to uppercase
 * 2. Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 * 3. Turn on small caps for upper and lowercase letters
 */
abbr[title] {
  text-transform: uppercase;
  /* [1] */
  letter-spacing: 0.05em;
  border-bottom: 1px dotted;
  /* [2] */
  cursor: help;
  /* [2] */
}

/**
 * 1. Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: 700;
  /* [1] */
}

/**
 * 1. Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
  /* [1] */
  cursor: help;
  /* [1] */
}

/**
 * 1. Address styling not present in IE 8/9.
 */
mark {
  padding-right: 0.1em;
  padding-left: 0.1em;
  color: rgba(0, 0, 0, 0.8);
  /* [1] */
  background-color: transparent !important;
  /* [1] */
  background-image: -webkit-linear-gradient(top, #defad3, #defad3);
  background-image: linear-gradient(to bottom, #defad3, #defad3);
}

mark code,
mark samp {
  background-color: transparent;
}

/**
 * Avoid confusion with links.
 */
ins {
  padding-right: 0.1em;
  padding-left: 0.1em;
  text-decoration: none;
  color: rgba(0, 0, 0, 0.8);
  background-color: transparent !important;
  background-image: -webkit-linear-gradient(top, #e0f4ff, #e0f4ff);
  background-image: linear-gradient(to bottom, #e0f4ff, #e0f4ff);
}

/**
 * Use color to differentiate from `s`.
 */
del {
  padding-right: 0.1em;
  padding-left: 0.1em;
  text-decoration: none;
  color: rgba(0, 0, 0, 0.8);
  background-color: transparent !important;
  background-image: -webkit-linear-gradient(top, #ffa8a8, #ffa8a8);
  background-image: linear-gradient(to bottom, #ffa8a8, #ffa8a8);
}

s {
  text-decoration: line-through;
  color: rgba(0, 0, 0, 0.8);
  opacity: .5;
}

address {
  font-style: normal;
}

/**
 * 1. Makes all browsers position the sup/sup properly, relative to the
 *    surrounding text.
 * 2. Specified in % so that the sup/sup is the right size relative to the
 *    surrounding text.
 * 3. Zero out the line-height so that it doesn't interfere with the positioning
 *    that follows.
 * 4. Turn on proper supercript numerals.
 * 5. Move the superscripted text up.
 * 6. Move the subscripted text down, but only half as far down as the
 *    superscript moved up.
 */
sub,
sup {
  position: relative;
  /* [1] */
  font-size: 75%;
  /* [2] */
  line-height: 0;
  /* [3] */
  vertical-align: baseline;
  /* [1] */
}

sup {
  top: -.5em;
  /* [5] */
}

sub {
  bottom: -.25em;
  /* [6] */
}

/**
 * Details.
 */
summary {
  cursor: pointer;
  outline: 0;
}

/**
 * Dividers.
 */
hr {
  width: 100%;
  height: 1px;
  overflow: hidden;
  margin-top: 0;
  margin-right: auto;
  margin-bottom: 0;
  margin-left: auto;
  padding-top: 3rem;
  padding-bottom: 3rem;
  text-align: center;
  border: 0;
}
hr::after {
  content: "\2022\2022\2022";
  position: relative;
  top: -0.8em;
  letter-spacing: 1em;
  color: rgba(0, 0, 0, 0.6);
}

/* ==========================================================================
   ELEMENTS / ANCHORS
   ========================================================================== */
/**
 * 1. Remove the gray background color from active links in IE 10.
 */
a {
  color: #378bb5;
  background-color: transparent;
  /* [1] */
  -webkit-transition: color 0.25s ease-out;
  transition: color 0.25s ease-out;
}
a:hover, a:active, a:focus {
  color: #2b6d8e;
}

/**
 * Make all links feel subtly more button-like.
 *
 * Setting a different positioning value for the active state of a link is
 * something you need to be very careful about. If you have any links on your
 * site that are absolutely positioned, having the active state change to
 * relative position will (probably) make them go flying away and render them
 * unclickable. You can fix this on a case-by-case basis by making the active
 * state of those links retain absolute positioning, and even make their top
 * value one higher (or bottom value one lower).
 */
a:active {
  position: relative;
  top: 1px;
}

/**
 * Remove borders.
 */
a img,
a abbr {
  border: 0 !important;
}

/**
 * Fixing styles on `code` tags nested inside links.
 */
a code {
  padding: inherit;
  color: inherit;
  background: inherit;
}

/* ==========================================================================
   ELEMENTS / LISTS
   ========================================================================== */
/**
 * Remove trailing margins from nested lists.
 */
li > ul,
li > ol {
  margin-bottom: 0;
  margin-left: 1em;
}

/**
 * Navigation lists.
 */
nav ul,
nav ol {
  margin-left: 0;
  list-style: none;
}

/* ==========================================================================
   ELEMENTS / FORMS
   ========================================================================== */
form,
fieldset {
  margin-bottom: 1.5rem;
}

/**
 * 1. inputs with a type=["search"] in WebKit browsers by default have rounded
 *    corners and are very strict in what you can alter via CSS. We don't want
 *    that styling and remove it in one fell swoop with appearance.
 *    Info: https://css-tricks.com/almanac/properties/a/appearance/
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* [1] */
}

/**
 * Make sure our form elements don't use any UA-specific font styles: we want
 * them to use ours. This may need reverting as more design information becomes
 * available, and we start putting together more complete forms.
 */
input {
  font: inherit;
}

/**
 * Placeholder attribute text.
 *
 * 1. In Firefox, placeholder text has a default opacity of around 0.5 so setting
 *    color: red on the placeholder will result in a muted color unless you also
 *    set opacity: 1.
 */
input::-webkit-input-placeholder {
  color: rgba(0, 0, 0, 0.44);
}

input::-moz-placeholder {
  color: rgba(0, 0, 0, 0.44);
  opacity: 1;
}

/* [1] */
input:-ms-input-placeholder {
  color: rgba(0, 0, 0, 0.44);
}

input::-webkit-input-placeholder {
  color: rgba(0, 0, 0, 0.44);
}

input::-moz-placeholder {
  color: rgba(0, 0, 0, 0.44);
}

input::placeholder {
  color: rgba(0, 0, 0, 0.44);
}

/**
 * Change Autocomplete styles in Chrome.
 *
 * 1. Text color.
 * 2. Trick the yellow color to your own background color with a strong inside
 *    shadow. Change `white` to any color.
 * 3. Use this if you need a transparent input field.
 */
input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus
input:-webkit-autofill,
textarea:-webkit-autofill,
textarea:-webkit-autofill:hover
textarea:-webkit-autofill:focus,
select:-webkit-autofill,
select:-webkit-autofill:hover,
select:-webkit-autofill:focus {
  -webkit-text-fill-color: inherit !important;
  /* [1] */
  -webkit-box-shadow: 0 0 0px 1000px white inset, 0px 0px 0px 1px rgba(0, 0, 0, 0.125) !important;
  /* [2] */
}

/**
 * 1. Remove default styling.
 * 2. When input not empty / in focus / not valid
 */
input[type="text"],
input[type="password"],
input[type="email"],
input[type="url"],
input[type="date"],
input[type="month"],
input[type="time"],
input[type="datetime"],
input[type="datetime-local"],
input[type="week"],
input[type="number"],
input[type="search"],
input[type="tel"],
input[type="color"],
select,
textarea {
  width: auto;
  padding-right: 0.6rem;
  padding-left: 0.6rem;
  color: rgba(0, 0, 0, 0.8);
  background-color: white;
  box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.125);
  border: none;
  border-radius: 3px;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  /* [1] */
}
input[type="text"]:focus,
input[type="password"]:focus,
input[type="email"]:focus,
input[type="url"]:focus,
input[type="date"]:focus,
input[type="month"]:focus,
input[type="time"]:focus,
input[type="datetime"]:focus,
input[type="datetime-local"]:focus,
input[type="week"]:focus,
input[type="number"]:focus,
input[type="search"]:focus,
input[type="tel"]:focus,
input[type="color"]:focus,
select:focus,
textarea:focus {
  box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.25);
}
input[type="text"]:invalid:focus:not(:placeholder-shown),
input[type="password"]:invalid:focus:not(:placeholder-shown),
input[type="email"]:invalid:focus:not(:placeholder-shown),
input[type="url"]:invalid:focus:not(:placeholder-shown),
input[type="date"]:invalid:focus:not(:placeholder-shown),
input[type="month"]:invalid:focus:not(:placeholder-shown),
input[type="time"]:invalid:focus:not(:placeholder-shown),
input[type="datetime"]:invalid:focus:not(:placeholder-shown),
input[type="datetime-local"]:invalid:focus:not(:placeholder-shown),
input[type="week"]:invalid:focus:not(:placeholder-shown),
input[type="number"]:invalid:focus:not(:placeholder-shown),
input[type="search"]:invalid:focus:not(:placeholder-shown),
input[type="tel"]:invalid:focus:not(:placeholder-shown),
input[type="color"]:invalid:focus:not(:placeholder-shown),
select:invalid:focus:not(:placeholder-shown),
textarea:invalid:focus:not(:placeholder-shown) {
  box-shadow: 0px 0px 0px 1px #fa5252;
  /* [2] */
}
input[type="text"][disabled], input[type="text"][readonly],
input[type="password"][disabled],
input[type="password"][readonly],
input[type="email"][disabled],
input[type="email"][readonly],
input[type="url"][disabled],
input[type="url"][readonly],
input[type="date"][disabled],
input[type="date"][readonly],
input[type="month"][disabled],
input[type="month"][readonly],
input[type="time"][disabled],
input[type="time"][readonly],
input[type="datetime"][disabled],
input[type="datetime"][readonly],
input[type="datetime-local"][disabled],
input[type="datetime-local"][readonly],
input[type="week"][disabled],
input[type="week"][readonly],
input[type="number"][disabled],
input[type="number"][readonly],
input[type="search"][disabled],
input[type="search"][readonly],
input[type="tel"][disabled],
input[type="tel"][readonly],
input[type="color"][disabled],
input[type="color"][readonly],
select[disabled],
select[readonly],
textarea[disabled],
textarea[readonly] {
  font-style: italic;
  color: rgba(0, 0, 0, 0.44);
}
input[type="text"][disabled],
input[type="password"][disabled],
input[type="email"][disabled],
input[type="url"][disabled],
input[type="date"][disabled],
input[type="month"][disabled],
input[type="time"][disabled],
input[type="datetime"][disabled],
input[type="datetime-local"][disabled],
input[type="week"][disabled],
input[type="number"][disabled],
input[type="search"][disabled],
input[type="tel"][disabled],
input[type="color"][disabled],
select[disabled],
textarea[disabled] {
  cursor: not-allowed;
}

/**
 * Specify the type of cursor to be displayed.
 */
input[type="submit"],
input[type="reset"] {
  cursor: pointer;
}

/**
 * Turns on lining, proportional numerals without clarified zeroes.
 */
input[type="color"],
input[type="date"],
input[type="datetime"],
input[type="datetime-local"],
input[type="number"],
input[type="range"],
input[type="tel"],
input[type="week"] {
  -webkit-font-feature-settings: "kern" 0, "liga" 1, "calt" 1, "pnum" 1, "tnum" 0, "onum" 0, "lnum" 1, "zero" 0;
          font-feature-settings: "kern" 0, "liga" 1, "calt" 1, "pnum" 1, "tnum" 0, "onum" 0, "lnum" 1, "zero" 0;
  /* [1] */
}

/**
 * 1. Remove the extra bottom margin that both Firefox and Chrome seem to give
 *    to textareas.
 */
textarea {
  vertical-align: top;
  /* [1] */
}

/* ==========================================================================
   ELEMENTS / CODE
   ========================================================================== */
/**
 * 1. Fix an odd quirk whereby, without this, code blocks are rendered at a
 *    font-size smaller than 1em.
 * 2. Turn off kerning and ligatures, turn on lining, tabular numerals, slashed
 *    zero.
 */
code,
kbd,
pre,
samp {
  font-family: Consolas, monaco, monospace;
  /* [1] */
  text-shadow: 0 1px #fff;
  background-color: rgba(0, 0, 0, 0.0625);
  border-radius: 3px;
  -webkit-font-feature-settings: "kern" 0, "liga" 0, "calt" 1, "dlig" 0, "pnum" 0, "tnum" 1, "onum" 0, "lnum" 1, "zero" 1;
          font-feature-settings: "kern" 0, "liga" 0, "calt" 1, "dlig" 0, "pnum" 0, "tnum" 1, "onum" 0, "lnum" 1, "zero" 1;
  /* [2] */
}

code,
kbd,
samp {
  padding: 0.1em 0.2em;
  font-size: 90%;
  text-shadow: 0 1px #fff;
}

/**
 * 1. Contain overflow in all browsers.
 */
pre {
  padding-top: 0.75rem;
  padding-right: 0.6rem;
  padding-bottom: 0.75rem;
  padding-left: 0.6rem;
  white-space: pre;
  /* [1] */
  white-space: pre-wrap;
  /* [1] */
  word-break: break-all;
  /* [1] */
  word-wrap: break-word;
  /* [1] */
  background-color: rgba(0, 0, 0, 0.0625);
  border-radius: 3px;
}

pre code {
  padding: 0;
  background-color: transparent;
  border-radius: none;
}

pre mark {
  color: inherit;
  background: none;
  border-bottom: 1px solid;
}

/* ==========================================================================
   ELEMENTS / QUOTES
   ========================================================================== */
:lang(fr) q {
  quotes: "\00AB\00A0" "\00A0\00BB" "\201C" "\201D" "\2018" "\2019";
}

:lang(fr) blockquote {
  quotes: "\00AB\00A0" "\00A0\00BB";
}

:lang(en) q {
  quotes: "\201C" "\201D" "\2018" "\2019";
}

:lang(en) blockquote {
  quotes: "\201C" "\201D";
}

q:before {
  content: open-quote;
}

q:after {
  content: close-quote;
}

q q:before {
  content: open-quote;
}

q q:after {
  content: close-quote;
}

blockquote p:before {
  content: open-quote;
}

blockquote p + p:before {
  content: '';
  content: no-open-quote;
}

blockquote p:after {
  content: '';
  content: no-close-quote;
}

blockquote p:last-of-type:after {
  content: close-quote;
}

blockquote q:before {
  content: open-quote;
}

blockquote q:after {
  content: close-quote;
}

blockquote p:last-of-type {
  margin-bottom: 0;
}

/**
 * 1. Hang the opening quote of the english blockquotes.
 */
:lang(en) blockquote p:first-child {
  text-indent: -.41em;
  /* 1 */
}

/* ==========================================================================
   ELEMENTS / TABLES
   ========================================================================== */
/**
 * Crude table styles; tables are very difficult to keep on the baseline.
 *
 * 1. Ensure tables fill up as much space as possible.
 * 2. Turns on tabular, lining numerals and slashed zero
 */
table {
  width: 100%;
  /* [1] */
  border-collapse: collapse;
  border-spacing: 0;
}

thead tr:last-child th {
  position: relative;
}
thead tr:last-child th::after {
  content: '';
  position: absolute;
  top: 100%;
  left: 0;
  width: 100%;
  height: 1px;
  background-image: -webkit-linear-gradient(top, transparent 50%, rgba(0, 0, 0, 0.125) 50%);
  background-image: linear-gradient(to bottom, transparent 50%, rgba(0, 0, 0, 0.125) 50%);
  background-position: 0 100%;
  background-repeat: repeat-x;
  background-size: 100% 2px;
}

th,
td {
  padding: 0.75rem;
  text-align: left;
}

/**
 * Cell alignments
 */
[colspan] {
  text-align: center;
}

[colspan="1"] {
  text-align: left;
}

[rowspan] {
  vertical-align: middle;
}

[rowspan="1"] {
  vertical-align: top;
}

/* ==========================================================================
   ELEMENTS / MEDIA
   ========================================================================== */
/**
 * 1. Fluid images for responsive purposes.
 * 2. Preserve image ratio.
 * 3. Correct a bug on IE8.
 * 4. Offset `alt` text from surrounding copy.
 * 5. Setting `vertical-align` removes the whitespace that appears under `img`
 *    elements when they are dropped into a page as-is. Safer alternative to
 *    using `display: block;`.
 * 6. Remove border when inside an `a` element in IE 8/9/10.
 */
img,
canvas,
iframe,
svg,
video {
  max-width: 100%;
  /* [1] */
  height: auto;
  /* [2] */
  width: auto;
  /* [3] */
  font-style: italic;
  /* [4] */
  vertical-align: middle;
  /* [5] */
  border: 0;
  /* [6] */
}

/**
 * 1. If a `width` and/or `height` attribute have been explicitly defined, letÔÇÖs
 *    not make the image fluid.
 * 2. Google Maps breaks if `max-width: 100%` acts upon it; use their selector
 *    to remove the effects.
 */
img[width],
img[height],
.gm-style img {
  /* [2] */
  max-width: none;
}

/**
 * 1. As we know that `inline-block` elements grow wider max till 100%
 *    (considering padding and no width defined) of its parent based on its
 *    content. When the content text of figcaption is less, it's aligned
 *    center by virtue of the property `text-align:center` defined on its
 *    parent figure. As the text of figcaption grows into multiple lines, it
 *    keeps widening to the max width of its parent figure width. Now the
 *    magic starts! `text-align: left;` defined on figcaption makes the
 *    content text left aligned.
 * 2. Default value of `vertical-align` is baseline and when applied to blocks
 *    of different heights, it's often unwanted. Applying a value of top will
 *    solve the problem of white space above.
 */
figure {
  text-align: center;
  /* [1] */
}
figure > img {
  display: block;
  margin-right: auto;
  margin-left: auto;
}

figcaption {
  display: inline-block;
  /* [1] */
  vertical-align: top;
  /* [2] */
  font-size: 0.75rem;
  line-height: 1.5rem;
  text-align: left;
  /* [1] */
  color: rgba(0, 0, 0, 0.6);
}

/**
 * Broken images are ugly. But they don't always have to be. We can use CSS to
 * apply styles to the `img` element to provide a better experience than the
 * default. when the image is broken and not loaded, the pseudo-elements can
 * appear.
 *
 * jQuery will detect broken images and add the `.is-broken` class.
 *
   $(window).bind('load', function() {
     $('img').each(function() {
       if((typeof this.naturalWidth != "undefined" && this.naturalWidth == 0 ) || this.readyState == 'uninitialized' ) {
         $(this).attr('id', js-img-broken');
       }
     });
   });
 *
 * @ireaderinokun http://bitsofco.de/styling-broken-images/
 */
img#js-img-broken {
  display: block;
  position: relative;
  outline: none;
}
img#js-img-broken::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  content: attr(alt);
  z-index: 1;
  font-size: 0.75rem;
  line-height: 1.5rem;
  font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;
  font-weight: 700;
  font-style: normal;
  text-align: center;
  text-shadow: 0 1px #fff;
  color: inherit;
  background-color: #efefef;
  opacity: 1;
}
img#js-img-broken::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 0;
  width: 100%;
  height: 100%;
  content: "⚠" " image non disponible";
  z-index: 2;
  font-size: 0.75rem;
  line-height: 1.5rem;
  font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;
  font-weight: 400;
  font-style: normal;
  text-align: center;
  text-shadow: 0 1px #fff;
  color: inherit;
  background-color: transparent;
}

/* ==========================================================================
   LAYOUT / FLEXBOX
   ========================================================================== */
/**
 * A simple set of class-based flexbox rules which let you specify layout
 * properties directly in markup..
 *
 * Source: https://codepen.io/thulstrup/pen/waJZBW/
 */
.l-horizontal {
  display: -webkit-box;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-direction: normal;
  -webkit-box-orient: horizontal;
  -moz-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.l-horizontal-reverse {
  display: -webkit-box;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-direction: reverse;
  -webkit-box-orient: horizontal;
  -moz-flex-direction: row-reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
}

.l-vertical {
  display: -webkit-box;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-direction: normal;
  -webkit-box-orient: vertical;
  -moz-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.l-vertical-reverse {
  display: -webkit-box;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-direction: reverse;
  -webkit-box-orient: vertical;
  -moz-flex-direction: column-reverse;
  -ms-flex-direction: column-reverse;
  flex-direction: column-reverse;
}

.l-inline {
  display: -webkit-inline-box;
  display: -moz-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

.l-wrap {
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.l-wrap-reverse {
  -ms-flex-wrap: wrap-reverse;
  flex-wrap: wrap-reverse;
}

.l-flex-auto {
  -webkit-box-flex: 1;
  -moz-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.l-flex-none {
  -webkit-box-flex: none;
  -moz-flex: none;
  -ms-flex: none;
  flex: none;
}

.l-flex-1 {
  -webkit-box-flex: 1;
  -moz-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.l-flex-2 {
  -webkit-box-flex: 2;
  -moz-flex: 2;
  -ms-flex: 2;
  flex: 2;
}

.l-flex-3 {
  -webkit-box-flex: 3;
  -moz-flex: 3;
  -ms-flex: 3;
  flex: 3;
}

.l-flex-4 {
  -webkit-box-flex: 4;
  -moz-flex: 4;
  -ms-flex: 4;
  flex: 4;
}

.l-flex-5 {
  -webkit-box-flex: 5;
  -moz-flex: 5;
  -ms-flex: 5;
  flex: 5;
}

.l-flex-6 {
  -webkit-box-flex: 6;
  -moz-flex: 6;
  -ms-flex: 6;
  flex: 6;
}

.l-flex-7 {
  -webkit-box-flex: 7;
  -moz-flex: 7;
  -ms-flex: 7;
  flex: 7;
}

.l-flex-8 {
  -webkit-box-flex: 8;
  -moz-flex: 8;
  -ms-flex: 8;
  flex: 8;
}

.l-flex-9 {
  -webkit-box-flex: 9;
  -moz-flex: 9;
  -ms-flex: 9;
  flex: 9;
}

.l-flex-10 {
  -webkit-box-flex: 10;
  -moz-flex: 10;
  -ms-flex: 10;
  flex: 10;
}

.l-flex-11 {
  -webkit-box-flex: 11;
  -moz-flex: 11;
  -ms-flex: 11;
  flex: 11;
}

.l-flex-12 {
  -webkit-box-flex: 12;
  -moz-flex: 12;
  -ms-flex: 12;
  flex: 12;
}

/**
 * Alignments in cross axis.
 */
.l-start {
  -webkit-box-align: start;
  -ms-flex-align: start;
  -moz-align-items: flex-start;
  align-items: flex-start;
}

.l-center {
  -webkit-box-align: center;
  -ms-flex-align: center;
  -moz-align-items: center;
  align-items: center;
}

.l-end {
  -webkit-box-align: end;
  -ms-flex-align: end;
  -moz-align-items: flex-end;
  align-items: flex-end;
}

/**
 * Alignment in main axis.
 */
.l-start-justified {
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  -moz-justify-content: flex-start;
  justify-content: flex-start;
}

.l-center-justified {
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -moz-justify-content: center;
  justify-content: center;
}

.l-end-justified {
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  -moz-justify-content: flex-end;
  justify-content: flex-end;
}

.l-around-justified {
  -ms-flex-pack: distribute;
  -moz-justify-content: space-around;
  justify-content: space-around;
}

.l-justified {
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  -moz-justify-content: space-between;
  justify-content: space-between;
}

/**
 * Self alignment.
 */
.l-self-start {
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
}

.l-self-center {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  -ms-grid-row-align: center;
      align-self: center;
}

.l-self-end {
  -webkit-align-self: flex-end;
  -ms-flex-item-align: end;
  align-self: flex-end;
}

.l-self-stretch {
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  -ms-grid-row-align: stretch;
      align-self: stretch;
}

/* ==========================================================================
   LAYOUT / GRID
   ========================================================================== */
/**
 * Basic grid.
 *
 * By default, each grid cell is the same width and height as every other cell
 * in the row. Basically they all size to fit by default. For finer control, you
 * can add sizing classes to individual cells. Without these classes, the cells
 * simply divide up the available space as usual. For responsive grids, you can
 * add media query-specific classes to the cells. Individual cells can be aligned
 * vertically to the top, bottom, or middle. When you want all of the cells in a
 * grid to have the same sizing, media, or alignment values, you should be able
 * to just add a single class to the container to avoid unnecessary repetition.
 * Grids can be nested as many levels deep as needed.
 *
 * @philwalton https://github.com/philipwalton/solved-by-flexbox/blob/master/assets/css/components/grid.css
 */
.l-grid.l-grid {
  display: -webkit-box;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin: 0;
  padding: 0;
  list-style: none;
}
.l-grid > .l-grid__item {
  -webkit-box-flex: 1;
  -moz-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

/* Grid gutter
   ========================================================================== */
.l-grid--gutter.l-grid--gutter {
  margin-left: -1.5rem;
}
.l-grid--gutter.l-grid--gutter > .l-grid__item {
  margin-left: 1.5rem;
}

/* Individual Sizing
   ========================================================================== */
/**
 * When equal widths are not what you want, you can add sizing classes to
 * individual cells. Cells without sizing classes simply divide up the
 * remaining space as normal.
 */
/**
 * A mobile-first approach.
 */
.l-grid__item.l-1\/1 {
  -webkit-box-flex: 0;
  -moz-flex: 0 0 calc(100% - 1.5rem);
  -ms-flex: 0 0 calc(100% - 1.5rem);
  flex: 0 0 calc(100% - 1.5rem);
}

.l-grid__item.l-1\/2 {
  -webkit-box-flex: 0;
  -moz-flex: 0 0 calc(50% - 1.5rem);
  -ms-flex: 0 0 calc(50% - 1.5rem);
  flex: 0 0 calc(50% - 1.5rem);
}

.l-grid__item.l-1\/3 {
  -webkit-box-flex: 0;
  -moz-flex: 0 0 calc(33.3333% - 1.5rem);
  -ms-flex: 0 0 calc(33.3333% - 1.5rem);
  flex: 0 0 calc(33.3333% - 1.5rem);
}

.l-grid__item.l-1\/4 {
  -webkit-box-flex: 0;
  -moz-flex: 0 0 calc(25% - 1.5rem);
  -ms-flex: 0 0 calc(25% - 1.5rem);
  flex: 0 0 calc(25% - 1.5rem);
}

.l-grid__item.l-1\/5 {
  -webkit-box-flex: 0;
  -moz-flex: 0 0 calc(20% - 1.5rem);
  -ms-flex: 0 0 calc(20% - 1.5rem);
  flex: 0 0 calc(20% - 1.5rem);
}

/**
 * Responsive modifiers.
 */
@media (min-width: 45em) {
  .l-grid__item.l-1\/1\@medium {
    -webkit-box-flex: 0;
    -moz-flex: 0 0 calc(100% - 1.5rem);
    -ms-flex: 0 0 calc(100% - 1.5rem);
    flex: 0 0 calc(100% - 1.5rem);
  }

  .l-grid__item.l-1\/2\@medium {
    -webkit-box-flex: 0;
    -moz-flex: 0 0 calc(50% - 1.5rem);
    -ms-flex: 0 0 calc(50% - 1.5rem);
    flex: 0 0 calc(50% - 1.5rem);
  }

  .l-grid__item.l-1\/3\@medium {
    -webkit-box-flex: 0;
    -moz-flex: 0 0 calc(33.3333% - 1.5rem);
    -ms-flex: 0 0 calc(33.3333% - 1.5rem);
    flex: 0 0 calc(33.3333% - 1.5rem);
  }

  .l-grid__item.l-1\/4\@medium {
    -webkit-box-flex: 0;
    -moz-flex: 0 0 calc(25% - 1.5rem);
    -ms-flex: 0 0 calc(25% - 1.5rem);
    flex: 0 0 calc(25% - 1.5rem);
  }

  .l-grid__item.l-1\/5\@medium {
    -webkit-box-flex: 0;
    -moz-flex: 0 0 calc(20% - 1.5rem);
    -ms-flex: 0 0 calc(20% - 1.5rem);
    flex: 0 0 calc(20% - 1.5rem);
  }
}
@media (min-width: 60em) {
  .l-grid__item.l-1\/1\@large {
    -webkit-box-flex: 0;
    -moz-flex: 0 0 calc(100% - 1.5rem);
    -ms-flex: 0 0 calc(100% - 1.5rem);
    flex: 0 0 calc(100% - 1.5rem);
  }

  .l-grid__item.l-1\/2\@large {
    -webkit-box-flex: 0;
    -moz-flex: 0 0 calc(50% - 1.5rem);
    -ms-flex: 0 0 calc(50% - 1.5rem);
    flex: 0 0 calc(50% - 1.5rem);
  }

  .l-grid__item.l-1\/3\@large {
    -webkit-box-flex: 0;
    -moz-flex: 0 0 calc(33.3333% - 1.5rem);
    -ms-flex: 0 0 calc(33.3333% - 1.5rem);
    flex: 0 0 calc(33.3333% - 1.5rem);
  }

  .l-grid__item.l-1\/4\@large {
    -webkit-box-flex: 0;
    -moz-flex: 0 0 calc(25% - 1.5rem);
    -ms-flex: 0 0 calc(25% - 1.5rem);
    flex: 0 0 calc(25% - 1.5rem);
  }

  .l-grid__item.l-1\/5\@large {
    -webkit-box-flex: 0;
    -moz-flex: 0 0 calc(20% - 1.5rem);
    -ms-flex: 0 0 calc(20% - 1.5rem);
    flex: 0 0 calc(20% - 1.5rem);
  }
}
/* ==========================================================================
   LAYOUT / WRAPPERS
   ========================================================================== */
/**
 * Use wrappers when you need a content area that is a standardized width and centered on the page.
 */
.l-wrapper.l-wrapper {
  margin-right: auto;
  margin-left: auto;
  padding-right: 1.5rem;
  padding-left: 1.5rem;
}
.l-wrapper.l-wrapper--large {
  max-width: 74.551em;
}
.l-wrapper.l-wrapper--medium {
  max-width: 55.927em;
}
.l-wrapper.l-wrapper--narrow {
  max-width: 33em;
}

/* ==========================================================================
   OBJECTS / FORM-FIELDS
   ========================================================================== */
/**
 * Group sets of form fields in a list, e.g.:
 *
   <div class="o-form-field">
     <label />
     <input />
   </div>

   <div class="o-form-field">
     <label />
     <select />
   </div>

   <div class="o-form-field">
     <label />
     <input />
   </div>
 *
 */
.o-form-field {
  margin-bottom: 0.75rem;
}

/* ==========================================================================
   OBJECTS / ICONS
   ========================================================================== */
/**
 * Using locally defined (inlined) SVG graphics.
 * The storage limit is usually 5 MB per domain. This is more than enough for
 * storing SVG sprites. A tiny piece of JavaScript code to handle this part. You
 * can safely place this code anywhere in the document as the SVG file scanning
 * works asynchronously. If you put the code at the head of the document, the
 * icons will load a little bit faster.
 *
  <script>
    // Storing SVG Sprite in localStorage
    ;( function( window, document )
    {
      'use strict';
      var file   = 'img/icons/svg/svg.html',
        revision = 2;
      if( !document.createElementNS || !document.createElementNS( 'http://www.w3.org/2000/svg', 'svg' ).createSVGRect )
        return true;
      var isLocalStorage = 'localStorage' in window && window[ 'localStorage' ] !== null,
        request,
        data,
        insertIT = function()
        {
          document.body.insertAdjacentHTML( 'afterbegin', data );
        },
        insert = function()
        {
          if( document.body ) insertIT();
          else document.addEventListener( 'DOMContentLoaded', insertIT );
        };
      if( isLocalStorage && localStorage.getItem( 'inlineSVGrev' ) == revision )
      {
        data = localStorage.getItem( 'inlineSVGdata' );
        if( data )
        {
          insert();
          return true;
        }
      }
      try
      {
        request = new XMLHttpRequest();
        request.open( 'GET', file, true );
        request.onload = function()
        {
          if( request.status >= 200 && request.status < 400 )
          {
            data = request.responseText;
            insert();
            if( isLocalStorage )
            {
              localStorage.setItem( 'inlineSVGdata',  data );
              localStorage.setItem( 'inlineSVGrev', revision );
            }
          }
        }
        request.send();
      }
      catch( e ){}
    }( window, document ) );
  </script>
 *
 * There are two lines you need to configure on your own:
 *
  var file     = 'img/icons/svg/svg.html',
    revision = 1;
 *
 * The svg.html usually looks this:
 *
  <svg style="display: none;" aria-hidden="true">
    <symbol id="svg-plane" viewbox="0 0 510 510"><path d="..." /></symbol>
    <symbol id="svg-close" viewbox="0 0 357 357"><path d="..." /></symbol>
    <symbol id="svg-fav" viewbox="0 0 510 510"><path d="..." /></symbol>
    <symbol id="svg-share" viewbox="0 0 459 459"><path d="..." /></symbol>
    <symbol id="svg-cart" viewbox="0 0 510 510"><path d="..." /></symbol>
    <symbol id="svg-tick" viewbox="0 0 510 510"><path d="..." /></symbol>
  </svg>
 *
 * If a browser does not support SVG, we can rely on raster images and JavaScript
 * fallback. We need data-img attribute for specifying the location of raster
 * image, for example:
 *
  <svg><use xlink:href="#svg-cart" data-img="img/icons/png/cart.png"></use></svg>
 *
 * You have to register svg and use elements so that the fallback code can later
 * operate them. This should be placed at the document head, best before the first
 * <script> occurence:
 *
  ;( function( window, document ) {
    if( document.createElementNS && document.createElementNS( 'http://www.w3.org/2000/svg', 'svg' ).createSVGRect ) return true;
    var uses = document.getElementsByTagName( 'use' ), use;
    while( ( use = uses[ 0 ] ) )
    {
      var svg = use.parentNode, img = new Image();
      img.src = use.getAttribute( 'data-img' );
      svg.parentNode.replaceChild( img, svg );
    }
  }( window, document ) );
 *
 * Finally, the fallback itself ÔÇô it should be placed at the end of the document:
 *
  ;( function( window, document )
  {
      if( document.createElementNS && document.createElementNS( 'http://www.w3.org/2000/svg', 'svg' ).createSVGRect ) return true;
      var uses = document.getElementsByTagName( 'use' ), use;
      while( ( use = uses[ 0 ] ) )
      {
          var svg = use.parentNode, img = new Image();
          img.src = use.getAttribute( 'data-img' );
          svg.parentNode.replaceChild( img, svg );
      }
  }( window, document ) );
 *
 * The worst part about this technique is that you cannot get SVG sprite
 * functioning if JavaScript is disabled in userÔÇÖs browser. But, like in ÔÇ£no SVG
 * supportÔÇØ case, we can rely on raster images, for example:
 *
  <svg><use xlink:href="#svg-cart"></use></svg><noscript><img src="img/icons/png/cart.png" alt="" /></noscript>
 *
 * @oswaldas http://osvaldas.info/caching-svg-sprite-in-localstorage
 */
/**
 * Example showing how to change the color/size of the icons:
 *
   .o-icon--icon-name {
      font-size: 32px; // works because "width" & "height" were set using em units.
      color    : red;  // works for single-colored icons, because "fill" was set to "currentColor".
   }
*/
.o-icon {
  display: inline-block;
  width: 1em;
  height: 1em;
  vertical-align: -0.15em;
  fill: currentColor;
  overlow: hidden;
}

/* ==========================================================================
   OBJECTS / IMAGE-HEIGHTS
   ========================================================================== */
/**
 * Keep your images on your baseline.
 *
 * Please note, these will not work too nicely with fluid images and will
 * distort when resized below a certain width. Use with caution.
 */
.o-image-short {
  height: 7.5rem;
}

.o-image-medium {
  height: 240rem;
}

.o-image-tall {
  height: 22.5rem;
}

.o-image-huge {
  height: 30rem;
}

/* ==========================================================================
   OBJECTS / LIST-BARE
   ========================================================================== */
/**
 * Strip list-like appearance from lists by removing their bullets, and any
 * indentation.
 */
.o-list-bare {
  margin-left: 0;
  list-style: none;
}

/* ==========================================================================
   OBJECTS / LIST-BLOCK
   ========================================================================== */
/**
 * Create big blocky lists of content, e.g.:
 *
   <ul class=block-list>
      <li>Foo</li>
      <li>Bar</li>
      <li>Baz</li>
      <li><a href=# class=block-list__link>Foo Bar Baz</a></li>
   </ul>
 *
 * Extend this object in your theme stylesheet.
 *
 * Demo: jsfiddle.net/inuitcss/hR57q
 *
 */
.o-list-block.o-list-block {
  margin-left: 0;
  list-style: none;
  position: relative;
}
.o-list-block.o-list-block::before {
  content: '';
  position: absolute;
  top: -1px;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: -webkit-linear-gradient(top, transparent 50%, rgba(0, 0, 0, 0.125) 50%);
  background-image: linear-gradient(to bottom, transparent 50%, rgba(0, 0, 0, 0.125) 50%);
  background-position: 0 top;
  background-repeat: repeat-x;
  background-size: 100% 2px;
}
.o-list-block .o-list-block__item {
  padding: 0.75rem;
  position: relative;
}
.o-list-block .o-list-block__item::after {
  content: '';
  position: absolute;
  top: 100%;
  left: 0;
  width: 100%;
  height: 1px;
  background-image: -webkit-linear-gradient(top, transparent 50%, rgba(0, 0, 0, 0.125) 50%);
  background-image: linear-gradient(to bottom, transparent 50%, rgba(0, 0, 0, 0.125) 50%);
  background-position: 0 100%;
  background-repeat: repeat-x;
  background-size: 100% 2px;
}
.o-list-block .o-list-block__link {
  display: block;
  margin: -0.75rem;
  padding: 0.75rem;
}

/* ==========================================================================
   OBJECTS / LIST-FIT
   ========================================================================== */
/**
 * Force a list to occupy 100% of the available width of its parent, e.g.:
 *
   <ul class="o-list-fit">
     <li class="o-list-fit__item">├®l├®ment 1</li>
     <li class="o-list-fit__item">├®l├®ment 2</li>
     <li class="o-list-fit__item">├®l├®ment 3</li>
     <li class="o-list-fit__item">├®l├®ment 4</li>
   </ul>
 */
.o-list-fit.o-list-fit {
  display: table;
  width: 100%;
  margin-left: 0;
}
.o-list-fit > .o-list-fit__item {
  display: table-cell;
}
.o-list-fit > .o-list-fit__item > a {
  display: block;
}

/* ==========================================================================
   OBJECTS / LIST-INLINE
   ========================================================================== */
/**
 * The list-inline object simply displays a list of items in one line with
 * possible style variants, e.g.:
 *
   <ul class="o-list-inline">
     <li class="o-list-inline__item">element 1</li>
     <li class="o-list-inline__item">element 2</li>
   </ul>

   <ul class="[ o-list-inline  o-list-inline--banner ]">
     <li class="o-list-inline__item">element 1</li>
     <li class="o-list-inline__item">element 2</li>
   </ul>

   <ul class="[ o-list-inline  o-list-inline--comma ]">
     <li class="o-list-inline__item">element 1</li>
     <li class="o-list-inline__item">element 2</li>
     <li class="o-list-inline__item">element 3</li>
     <li class="o-list-inline__item">element 4</li>
   </ul>

   <ul class="[ o-list-inline  o-list-inline--dash ]">
     <li class="o-list-inline__item">element 1</li>
     <li class="o-list-inline__item">element 2</li>
     <li class="o-list-inline__item">element 3</li>
     <li class="o-list-inline__item">element 4</li>
   </ul>

   <ul class="[ o-list-inline  o-list-inline--pipe ]">
     <li class="o-list-inline__item">element 1</li>
     <li class="o-list-inline__item">element 2</li>
     <li class="o-list-inline__item">element 3</li>
     <li class="o-list-inline__item">element 4</li>
   </ul>
 */
.o-list-inline.o-list-inline {
  margin-left: 0;
  list-style: none;
}
.o-list-inline .o-list-inline__item {
  display: inline-block;
}
.o-list-inline.o-list-inline--banner {
  text-align: center;
}
.o-list-inline.o-list-inline--comma > .o-list-inline__item::after {
  content: '\002C\00A0';
}
.o-list-inline.o-list-inline--comma > .o-list-inline__item:last-child::after {
  content: ', etc.';
}
.o-list-inline.o-list-inline--dash > .o-list-inline__item::after {
  content: '\00A0\00A0\2013\00A0';
}
.o-list-inline.o-list-inline--dash > .o-list-inline__item:last-child::after {
  content: '';
}
.o-list-inline.o-list-inline--pipe > .o-list-inline__item::after {
  content: '\00A0\007C';
}
.o-list-inline.o-list-inline--pipe > .o-list-inline__item:last-child::after {
  content: '';
}

/* ==========================================================================
   OBJECTS / LIST-ORDERED
   ========================================================================== */
/**
 * Apply correct numbering to ordered lists and nested lists, e.g.:
 *
   <ol class="o-list-ordered">
     <li class="o-list-ordered__item">├®l├®ment 1</li>
     <li class="o-list-ordered__item">├®l├®ment 2
       <ol class="o-list-ordered">
         <li class="o-list-ordered__item">├®l├®ment 3</li>
         <li class="o-list-ordered__item">├®l├®ment 4</li>
       </ol>
     </li>
     <li class="o-list-ordered__item">├®l├®ment 5</li>
   </ol>
 */
.o-list-ordered.o-list-ordered {
  margin-left: 0.75rem;
  list-style: none;
  counter-reset: ordered;
}
.o-list-ordered .o-list-ordered__item::before {
  content: counters(ordered,".") " ";
  counter-increment: ordered;
}

/* ==========================================================================
   OBJECTS / NUMBERING
   ========================================================================== */
.o-numbering.o-numbering {
  counter-reset: numbering;
}
.o-numbering .o-numbering__item {
  counter-increment: numbering;
}
.o-numbering .o-numbering__item:before {
  content: counter(numbering) ". ";
}

/* ==========================================================================
   OBJECTS / RATIOS
   ========================================================================== */
/**
 * Create ratio-bound content blocks, to keep media (e.g. images, videos) in
 * their correct aspect ratios.
 *
 * http://alistapart.com/article/creating-intrinsic-ratios-for-video
 *
 * 1. Default cropping is a 1:1 ratio (i.e. a perfect square).
 */
.o-ratio {
  position: relative;
  display: block;
  overflow: hidden;
}
.o-ratio:before {
  content: "";
  display: block;
  width: 100%;
  padding-bottom: 100%;
  /* [1] */
}

.o-ratio__content,
.o-ratio > iframe,
.o-ratio > embed,
.o-ratio > object {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  height: 100%;
  width: 100%;
}

/* Ratio variants.
   ========================================================================== */
/**
 * Generate a series of ratio classes to be used like so:
 *
 *   <div class="o-ratio  o-ratio--16:9">
 *
 */
.o-ratio--2\:1:before {
  padding-bottom: 50%;
}

.o-ratio--4\:3:before {
  padding-bottom: 75%;
}

.o-ratio--16\:9:before {
  padding-bottom: 56.25%;
}

/* ==========================================================================
   OBJECTS / TABLES
   ========================================================================== */
/**
 * `table-layout: fixed` forces all cells within a table to occupy the same
 * width as each other. This also has performance benefits: because the browser
 * does not need to (re)calculate cell dimensions based on content it discovers,
 * the table can be rendered very quickly. Further reading:
 * https://developer.mozilla.org/en-US/docs/Web/CSS/table-layout#Values
 */
.o-table--fixed {
  table-layout: fixed;
}

/**
 * Bordered tables.
 */
.o-table--bordered {
  position: relative;
}
.o-table--bordered::before {
  content: '';
  position: absolute;
  top: -1px;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: -webkit-linear-gradient(top, transparent 50%, rgba(0, 0, 0, 0.125) 50%);
  background-image: linear-gradient(to bottom, transparent 50%, rgba(0, 0, 0, 0.125) 50%);
  background-position: 0 top;
  background-repeat: repeat-x;
  background-size: 100% 2px;
}
.o-table--bordered thead > tr > th {
  position: relative;
}
.o-table--bordered thead > tr > th::after {
  content: '';
  position: absolute;
  top: 100%;
  left: 0;
  width: 100%;
  height: 1px;
  background-image: -webkit-linear-gradient(top, transparent 50%, rgba(0, 0, 0, 0.125) 50%);
  background-image: linear-gradient(to bottom, transparent 50%, rgba(0, 0, 0, 0.125) 50%);
  background-position: 0 100%;
  background-repeat: repeat-x;
  background-size: 100% 2px;
}
.o-table--bordered tbody > tr td {
  position: relative;
}
.o-table--bordered tbody > tr td::after {
  content: '';
  position: absolute;
  top: 100%;
  left: 0;
  width: 100%;
  height: 1px;
  background-image: -webkit-linear-gradient(top, transparent 50%, rgba(0, 0, 0, 0.125) 50%);
  background-image: linear-gradient(to bottom, transparent 50%, rgba(0, 0, 0, 0.125) 50%);
  background-position: 0 100%;
  background-repeat: repeat-x;
  background-size: 100% 2px;
}
.o-table--bordered th, .o-table--bordered td {
  position: relative;
  border-style: solid;
  border-color: rgba(0, 0, 0, 0.125);
  border-left-width: 1px;
}
.o-table--bordered tr > th:last-child, .o-table--bordered tr > td:last-child {
  position: relative;
  border-style: solid;
  border-color: rgba(0, 0, 0, 0.125);
  border-right-width: 1px;
}

/**
 * Striped tables
 */
.o-table--striped tbody tr:nth-of-type(odd) {
  background-color: #ffc;
}

/* ==========================================================================
   COMPONENTS / BUTTONS
   ========================================================================== */
/**
 * 1. Allow us to style box model properties.
 * 2. Line different sized buttons up a little nicer.
 * 3. Make buttons inherit font styles (often necessary when styling `input`s as
 *    buttons).
 * 4. Reset/normalize some styles.
 * 5. Force all button-styled elements to appear clickable.
 */
.c-button {
  display: inline-block;
  /* [1] */
  vertical-align: middle;
  /* [2] */
  margin: 0;
  /* [4] */
  padding-top: 0.75rem;
  padding-right: 1.5rem;
  padding-bottom: 0.75rem;
  padding-left: 1.5rem;
  font: inherit;
  /* [3] */
  text-align: center;
  /* [4] */
  text-decoration: none;
  cursor: pointer;
  /* [5] */
  -webkit-transition: all 300ms ease-in-out;
  transition: all 300ms ease-in-out;
}

/* Size variants
   ========================================================================== */
.c-button--small {
  padding-top: 0.375rem;
  padding-right: 0.75rem;
  padding-bottom: 0.375rem;
  padding-left: 0.75rem;
}

.c-button--large {
  padding-top: 1.5rem;
  padding-right: 2.25rem;
  padding-bottom: 1.5rem;
  padding-left: 2.25rem;
}

.c-button--fit {
  width: 100%;
}

/* Style variants
   ========================================================================== */
.c-button--rounded {
  border-radius: 3px;
}

.c-button--pill {
  border-radius: 3rem;
}

.c-button--disabled,
.c-button[disabled] {
  opacity: 0.5;
  pointer-events: none;
}

/* Ghost buttons
   ========================================================================== */
/**
 * Ghost buttons have see-through backgrounds and are bordered.
 */
.c-button--ghost {
  padding-top: 0.65625rem;
  padding-right: 1.40625rem;
  padding-bottom: 0.65625rem;
  padding-left: 1.40625rem;
  border: 2px solid currentColor;
}
.c-button--ghost, .c-button--ghost:hover, .c-button--ghost:active, .c-button--ghost:focus {
  background: none;
}
.c-button--ghost.c-button--small {
  padding-top: 0.25rem;
  padding-right: 0.625rem;
  padding-bottom: 0.25rem;
  padding-left: 0.625rem;
}
.c-button--ghost.c-button--large {
  padding-top: 2.125rem;
  padding-right: 0.625rem;
  padding-bottom: 2.125rem;
  padding-left: 0.625rem;
}

/* Color variants
   ========================================================================== */
.c-button--primary {
  background-color: #378bb5;
}
.c-button--primary, .c-button--primary:hover, .c-button--primary:active, .c-button--primary:focus {
  text-decoration: none;
  /* [4] */
  color: #fff;
}
.c-button--primary:hover, .c-button--primary:focus {
  background-color: #317ca1;
}
.c-button--primary.c-button--ghost {
  color: #378bb5;
}
.c-button--primary.c-button--ghost, .c-button--primary.c-button--ghost:hover, .c-button--primary.c-button--ghost:active, .c-button--primary.c-button--ghost:focus {
  background: none;
}
.c-button--primary.c-button--ghost:hover, .c-button--primary.c-button--ghost:focus {
  color: #2b6d8e;
}

.c-button--secondary {
  background-color: #abc123;
}
.c-button--secondary, .c-button--secondary:hover, .c-button--secondary:active, .c-button--secondary:focus {
  text-decoration: none;
  /* [4] */
  color: #fff;
}
.c-button--secondary:hover, .c-button--secondary:focus {
  background-color: #98ab1f;
}
.c-button--secondary.c-button--ghost {
  color: #abc123;
}
.c-button--secondary.c-button--ghost, .c-button--secondary.c-button--ghost:hover, .c-button--secondary.c-button--ghost:active, .c-button--secondary.c-button--ghost:focus {
  background: none;
}
.c-button--secondary.c-button--ghost:hover, .c-button--secondary.c-button--ghost:focus {
  color: #85961b;
}

.c-button--black {
  background-color: #000;
}
.c-button--black, .c-button--black:hover, .c-button--black:active, .c-button--black:focus {
  text-decoration: none;
  /* [4] */
  color: #fff;
}
.c-button--black:hover, .c-button--black:focus {
  background-color: black;
}
.c-button--black.c-button--ghost {
  color: #000;
}
.c-button--black.c-button--ghost, .c-button--black.c-button--ghost:hover, .c-button--black.c-button--ghost:active, .c-button--black.c-button--ghost:focus {
  background: none;
}
.c-button--black.c-button--ghost:hover, .c-button--black.c-button--ghost:focus {
  color: black;
}

.c-button--white {
  background-color: #fff;
}
.c-button--white, .c-button--white:hover, .c-button--white:active, .c-button--white:focus {
  text-decoration: none;
  /* [4] */
  color: rgba(0, 0, 0, 0.8);
}
.c-button--white:hover, .c-button--white:focus {
  background-color: #f2f2f2;
}
.c-button--white.c-button--ghost {
  color: #fff;
}
.c-button--white.c-button--ghost, .c-button--white.c-button--ghost:hover, .c-button--white.c-button--ghost:active, .c-button--white.c-button--ghost:focus {
  background: none;
}
.c-button--white.c-button--ghost:hover, .c-button--white.c-button--ghost:focus {
  color: #e6e6e6;
}

.c-button--action {
  background-color: #378bb5;
}
.c-button--action, .c-button--action:hover, .c-button--action:active, .c-button--action:focus {
  text-decoration: none;
  /* [4] */
  color: #fff;
}
.c-button--action:hover, .c-button--action:focus {
  background-color: #317ca1;
}
.c-button--action.c-button--ghost {
  color: #378bb5;
}
.c-button--action.c-button--ghost, .c-button--action.c-button--ghost:hover, .c-button--action.c-button--ghost:active, .c-button--action.c-button--ghost:focus {
  background: none;
}
.c-button--action.c-button--ghost:hover, .c-button--action.c-button--ghost:focus {
  color: #2b6d8e;
}

.c-button--error {
  background-color: #fa5252;
}
.c-button--error, .c-button--error:hover, .c-button--error:active, .c-button--error:focus {
  text-decoration: none;
  /* [4] */
  color: #fff;
}
.c-button--error:hover, .c-button--error:focus {
  background-color: #f93939;
}
.c-button--error.c-button--ghost {
  color: #fa5252;
}
.c-button--error.c-button--ghost, .c-button--error.c-button--ghost:hover, .c-button--error.c-button--ghost:active, .c-button--error.c-button--ghost:focus {
  background: none;
}
.c-button--error.c-button--ghost:hover, .c-button--error.c-button--ghost:focus {
  color: #f92020;
}

.c-button--warning {
  background-color: #ffa94d;
}
.c-button--warning, .c-button--warning:hover, .c-button--warning:active, .c-button--warning:focus {
  text-decoration: none;
  /* [4] */
  color: #fff;
}
.c-button--warning:hover, .c-button--warning:focus {
  background-color: #ff9d34;
}
.c-button--warning.c-button--ghost {
  color: #ffa94d;
}
.c-button--warning.c-button--ghost, .c-button--warning.c-button--ghost:hover, .c-button--warning.c-button--ghost:active, .c-button--warning.c-button--ghost:focus {
  background: none;
}
.c-button--warning.c-button--ghost:hover, .c-button--warning.c-button--ghost:focus {
  color: #ff901a;
}

.c-button--info {
  background-color: #4dadf7;
}
.c-button--info, .c-button--info:hover, .c-button--info:active, .c-button--info:focus {
  text-decoration: none;
  /* [4] */
  color: #fff;
}
.c-button--info:hover, .c-button--info:focus {
  background-color: #35a2f6;
}
.c-button--info.c-button--ghost {
  color: #4dadf7;
}
.c-button--info.c-button--ghost, .c-button--info.c-button--ghost:hover, .c-button--info.c-button--ghost:active, .c-button--info.c-button--ghost:focus {
  background: none;
}
.c-button--info.c-button--ghost:hover, .c-button--info.c-button--ghost:focus {
  color: #1c97f5;
}

.c-button--success {
  background-color: #40c057;
}
.c-button--success, .c-button--success:hover, .c-button--success:active, .c-button--success:focus {
  text-decoration: none;
  /* [4] */
  color: #fff;
}
.c-button--success:hover, .c-button--success:focus {
  background-color: #39ad4e;
}
.c-button--success.c-button--ghost {
  color: #40c057;
}
.c-button--success.c-button--ghost, .c-button--success.c-button--ghost:hover, .c-button--success.c-button--ghost:active, .c-button--success.c-button--ghost:focus {
  background: none;
}
.c-button--success.c-button--ghost:hover, .c-button--success.c-button--ghost:focus {
  color: #339a45;
}

/* ==========================================================================
   SCOPE / LINKS
   ========================================================================== */
.s-links {
  /**
   * Links.
   *
   * 1. Country / language version.
   * 2. External links.
   * 3. Mailto.
   * 4. Telephone.
   * 5. Documents.
   * 6. Audio.
   */
}
.s-links a[hreflang]:not([hreflang="fr"]):lang(fr):after,
.s-links a[lang^="fr"]:after,
.s-links a[hreflang]:not([hreflang^="en"]):lang(en):after,
.s-links a[lang^="en"]:after {
  content: " [" attr(hreflang) "]";
  /* [1] */
}
.s-links :lang(en) > a[lang]:not([hreflang]):after,
.s-links :lang(fr) > a[lang]:not([hreflang]):after,
.s-links :lang(en) > a[lang^="en"]:after,
.s-links :lang(fr) > a[lang^="fr"]:after {
  content: none;
  /* [1] */
}
.s-links a[hreflang=""]:after,
.s-links h1 > a[hreflang]:after,
.s-links h2 > a[hreflang]:after,
.s-links h3 > a[hreflang]:after {
  content: none !important;
  /* [1] */
}
.s-links a:not([href*="yourdomain.com"]):not([href^="#"]):not([href^="mailto"]):not([href^="tel"])::after {
  content: "\0020\279A";
  /* [2] */
}
.s-links a[hreflang]:not([href*="yourdomain.com"]):not([href^="#"]):not([href^="mailto"]):not([href^="tel"])::after {
  content: " [" attr(hreflang) "] ➚";
  /* [2] */
}
.s-links a[href^="mailto"]::after {
  content: "\0020\2709";
  /* [3] */
}
.s-links a[href^="tel"]::after {
  content: "\0020\2706";
  /* [4] */
}
.s-links a[download]::after {
  content: "\0020\21A7";
  /* [5] */
}
.s-links a[hreflang][download]::after {
  content: " [" attr(hreflang) "] ↧";
  /* [5] */
}
.s-links a[href$=".mp3"]::after,
.s-links a[href$=".wma"]::after,
.s-links a[href$=".ogg"]::after,
.s-links a[href$=".flac"]::after {
  content: "\0020\266B";
  /* [6] */
}
.s-links a[hreflang][href$=".mp3"]::after,
.s-links a[hreflang][href$=".wma"]::after,
.s-links a[hreflang][href$=".ogg"]::after,
.s-links a[hreflang][href$=".flac"]::after {
  content: " [" attr(hreflang) "] ♫";
  /* [6] */
}

/* ==========================================================================
   TRUMPS / HEADINGS
   ========================================================================== */
/**
 * Headings 1–6’s corresponding Greek-alphabet abstract classes for double-
 * stranded heading hierarchy: csswizardry.com/2012/02/pragmatic-practical-font-sizing-in-css
 *
 * Use these helper classes to cause other elements to adopt the styling of the
 * respective heading, e.g.:
 *
   <h2 class="u-h1-size">Lorem ipsum</h2>
 *
 */
.u-h1-size {
  margin-bottom: 1.5rem;
  font-size: 3.1875rem;
  line-height: 4.5rem;
}

.u-h2-size {
  margin-bottom: 1.5rem;
  font-size: 2.375rem;
  line-height: 3rem;
}

.u-h3-size {
  font-size: 1.75rem;
  line-height: 3rem;
}

.u-h4-size {
  font-size: 1rem;
  line-height: 1.5rem;
}

.u-h5-size {
  font-size: 1rem;
  line-height: 1.5rem;
}

.u-h6-size {
  font-size: 1rem;
  line-height: 1.5rem;
}

/**
 * A generic heading style which can be applied to any headings.
 */
.u-heading {
  margin-bottom: 1.5rem;
  font-size: 1rem;
  line-height: 1.5rem;
}

/**
 * Text adjustments.
 *
 * `Can you just make that text a little bigger?`
 *
 * Sure! Use these utilities to adjust the size of a span of text by a little
 * bit more, or a little bit less, e.g.:
 *
     <p class="u-text-large">A little bit bigger.</p>
 *
 */
.u-text--xx-large {
  font-size: 5.625rem;
  line-height: 6rem;
}

.u-text--x-large {
  font-size: 4.1875rem;
  line-height: 4.5rem;
}

.u-text--large {
  font-size: 3.1875rem;
  line-height: 4.5rem;
}

.u-text--normal {
  font-size: 1rem;
  line-height: 1.5rem;
}

.u-text--small {
  font-size: 0.75rem;
  line-height: 1.5rem;
}

.u-text--x-small {
  font-size: 0.5625rem;
  line-height: 1.5rem;
}

/**
 * Dropcaps.
 *
 * The font size and margins used on lines 8 and 10 of the code above vary for
 * different typefaces. The following table provides values for two heights of
 * drop cap for each of four common typefaces.

    Times New Roman/Times, two lines   => font-size: 3.29em | margin: 0.205em 0.153em 0 0
    Times New Roman/Times, three lines => font-size: 5.53em | margin: 0.151em 0.0904em 0 0
    Georgia, two lines                 => font-size: 3.20em | margin: 0.225em 0.159em 0 0
    Georgia, three lines               => font-size: 5.32em | margin: 0.172em 0.0940em 0 0
    Arial/Helvetica, two lines         => font-size: 3.11em | margin: 0.240em 0.161em 0 0
    Arial/Helvetica, three lines       => font-size: 5.20em | margin: 0.192em 0.0962em 0 0
    Verdana, two lines                 => font-size: 3.06em | margin: 0.218em 0.163em 0 0
    Verdana, three lines               => font-size: 5.12em | margin: 0.162em 0.0977em 0 0

 * Info: http://code.stephenmorley.org/html-and-css/creating-drop-caps/
 */
.u-dropcap:first-letter {
  float: left;
  vertical-align: bottom;
  margin: 0.225em 0.159em 0 0;
  font-family: Georgia;
  font-size: 3.2em;
  line-height: 0.5;
  text-transform: uppercase;
  color: inherit;
}

/**
 * The `.u-lede` class is used to make the introductory text (usually a paragraph)
 * of a document slightly larger: en.wikipedia.org/wiki/Lede_(news)
 */
.u-lede {
  margin-bottom: 1.5rem;
  font-size: 1.3125rem;
  line-height: 1.5rem;
}

/* ==========================================================================
   OBJECTS / PULLQUOTE
   ========================================================================== */
.u-pull-quote {
  display: block;
  margin-top: 1.5rem;
  margin-right: 3rem;
  margin-bottom: 1.5rem;
  margin-left: 3rem;
  font-size: 1.3125rem;
  line-height: 1.5rem;
  font-style: italic;
  text-align: center;
}
.u-pull-quote::before {
  content: '';
}
.u-pull-quote::after {
  content: '';
}

/**
 * Small caps.
 *
 * For browsers that don't support OpenType, features, use all caps.
 */
.u-small-caps {
  text-transform: uppercase;
  -ms-font-feature-settings: "lnum", "smcp", "c2sc" 0;
}

/**
 * Progressively enhance with `font-feature-settings` if `font-variant-caps`
 * isn't supported.
 */
@supports not (font-variant-caps: small-caps) {
  .u-small-caps {
    text-transform: inherit;
    -webkit-font-feature-settings: "onum", "smcp", "c2sc" 0;
    font-feature-settings: "onum", "smcp", "c2sc" 0;
  }
}
/**
 * Otherwise, and ideally, use `font-variant-caps`.
 */
@supports (font-variant-caps: small-caps) {
  .u-small-caps {
    text-transform: inherit;
    -webkit-font-feature-settings: "c2sc";
    font-feature-settings: "c2sc";
    font-variant-caps: small-caps;
  }
}
/* ==========================================================================
   TRUMPS / COLORS
   ========================================================================== */
/**
 * Text colors variations.
 */
.u-color-text {
  color: rgba(0, 0, 0, 0.8);
}

.u-color-text-soft {
  color: rgba(0, 0, 0, 0.6);
}

.u-color-text-muted {
  color: rgba(0, 0, 0, 0.44);
}

.u-color-text-primary {
  color: #378bb5;
}

.u-color-text-primary-highlight {
  color: #4099c5;
}

.u-color-text-primary-shadow {
  color: #317ca1;
}

.u-color-text-secondary {
  color: #abc123;
}

.u-color-text-secondary-highlight {
  color: #bed727;
}

.u-color-text-secondary-shadow {
  color: #98ab1f;
}

.u-color-text-action {
  color: #378bb5;
}

.u-color-text-info {
  color: #4dadf7;
}

.u-color-text-success {
  color: #40c057;
}

.u-color-text-warning {
  color: #ffa94d;
}

.u-color-text-error {
  color: #378bb5;
}

/**
 * Background colors variations.
 */
.u-background {
  background-color: #fff;
}

.u-background-primary {
  background-color: #378bb5;
}

.u-background-primary-highlight {
  background-color: #4099c5;
}

.u-background-primary-shadow {
  background-color: #317ca1;
}

.u-background-secondary {
  background-color: #abc123;
}

.u-background-secondary-highlight {
  background-color: #bed727;
}

.u-background-secondary-shadow {
  background-color: #98ab1f;
}

.u-background-ui-light {
  background-color: rgba(0, 0, 0, 0.0625);
}

.u-background-ui-medium {
  background-color: rgba(0, 0, 0, 0.125);
}

.u-background-ui-dark {
  background-color: rgba(0, 0, 0, 0.25);
}

.u-background-action {
  background-color: #378bb5;
}

.u-background-info {
  background-color: #4dadf7;
}

.u-background-success {
  background-color: #40c057;
}

.u-background-warning {
  background-color: #ffa94d;
}

.u-background-error {
  background-color: #fa5252;
}

/**
 * Border colors variations.
 */
.u-border-primary {
  border-color: #378bb5;
}

.u-border-primary-highlight {
  border-color: #4099c5;
}

.u-border-primary-shadow {
  border-color: #317ca1;
}

.u-border-secondary {
  border-color: #abc123;
}

.u-border-secondary-highlight {
  border-color: #bed727;
}

.u-border-secondary-shadow {
  border-color: #98ab1f;
}

.u-border-ui-light {
  border-color: rgba(0, 0, 0, 0.0625);
}

.u-border-ui-medium {
  border-color: rgba(0, 0, 0, 0.125);
}

.u-border-ui-dark {
  border-color: rgba(0, 0, 0, 0.25);
}

.u-border-action {
  border-color: #378bb5;
}

.u-border-info {
  border-color: #4dadf7;
}

.u-border-success {
  border-color: #40c057;
}

.u-border-warning {
  border-color: #ffa94d;
}

.u-border-error {
  border-color: #fa5252;
}

/**
 * Fill colors variations.
 */
.u-fill-primary {
  fill: #378bb5;
}

.u-fill-primary-highlight {
  fill: #4099c5;
}

.u-fill-primary-shadow {
  fill: #317ca1;
}

.u-fill-secondary {
  fill: #abc123;
}

.u-fill-secondary-highlight {
  fill: #bed727;
}

.u-fill-secondary-shadow {
  fill: #98ab1f;
}

.u-fill-ui-light {
  fill: rgba(0, 0, 0, 0.0625);
}

.u-fill-ui-medium {
  fill: rgba(0, 0, 0, 0.125);
}

.u-fill-ui-dark {
  fill: rgba(0, 0, 0, 0.25);
}

.u-fill-action {
  fill: #378bb5;
}

.u-fill-info {
  fill: #4dadf7;
}

.u-fill-success {
  fill: #40c057;
}

.u-fill-warning {
  fill: #ffa94d;
}

.u-fill-error {
  fill: #fa5252;
}

/**
 * Gives us the ability to do color manipulations right in the browser.
 */
.u-color-dark {
  color: rgba(0, 0, 0, 0.0625);
}

.u-color-x-dark {
  color: rgba(0, 0, 0, 0.125);
}

.u-color-xx-dark {
  color: rgba(0, 0, 0, 0.25);
}

.u-color-xxx-dark {
  color: rgba(0, 0, 0, 0.5);
}

.u-color-light {
  color: rgba(255, 255, 255, 0.0625);
}

.u-color-x-light {
  color: rgba(255, 255, 255, 0.125);
}

.u-color-xx-light {
  color: rgba(255, 255, 255, 0.25);
}

.u-color-xxx-light {
  color: rgba(255, 255, 255, 0.5);
}

.u-background-dark {
  background-color: rgba(0, 0, 0, 0.0625);
}

.u-background-x-dark {
  background-color: rgba(0, 0, 0, 0.125);
}

.u-background-xx-dark {
  background-color: rgba(0, 0, 0, 0.25);
}

.u-background-xxx-dark {
  background-color: rgba(0, 0, 0, 0.5);
}

.u-background-light {
  background-color: rgba(255, 255, 255, 0.0625);
}

.u-background-x-light {
  background-color: rgba(255, 255, 255, 0.125);
}

.u-background-xx-light {
  background-color: rgba(255, 255, 255, 0.25);
}

.u-background-xxx-light {
  background-color: rgba(255, 255, 255, 0.5);
}

.u-border-dark {
  border-color: rgba(0, 0, 0, 0.0625);
}

.u-border-x-dark {
  border-color: rgba(0, 0, 0, 0.125);
}

.u-border-xx-dark {
  border-color: rgba(0, 0, 0, 0.25);
}

.u-border-xxx-dark {
  border-color: rgba(0, 0, 0, 0.5);
}

.u-border-light {
  border-color: rgba(255, 255, 255, 0.0625);
}

.u-border-x-light {
  border-color: rgba(255, 255, 255, 0.125);
}

.u-border-xx-light {
  border-color: rgba(255, 255, 255, 0.25);
}

.u-border-xxx-light {
  border-color: rgba(255, 255, 255, 0.5);
}

.u-fill-dark {
  color: rgba(0, 0, 0, 0.0625);
}

.u-fill-x-dark {
  color: rgba(0, 0, 0, 0.125);
}

.u-fill-xx-dark {
  color: rgba(0, 0, 0, 0.25);
}

.u-fill-xxx-dark {
  color: rgba(0, 0, 0, 0.5);
}

.u-fill-light {
  color: rgba(255, 255, 255, 0.0625);
}

.u-fill-x-light {
  color: rgba(255, 255, 255, 0.125);
}

.u-fill-xx-light {
  color: rgba(255, 255, 255, 0.25);
}

.u-fill-xxx-light {
  color: rgba(255, 255, 255, 0.5);
}

/* ==========================================================================
   TRUMPS / WIDTHS
   ========================================================================== */
/**
 * A series of width helper classes that you can use to size things like grid
 * systems. Classes can take a fraction-like format (e.g. `.u-2/3`) or a spoken-
 * word format (e.g. `.u-2-of-3`). Use these in your markup:
 *
 * <div class="u-3/4">
 */
.u-1\/1 {
  width: 100% !important;
}

.u-1\/2 {
  width: 50% !important;
}

.u-2\/2 {
  width: 100% !important;
}

.u-1\/3 {
  width: 33.3333333333% !important;
}

.u-2\/3 {
  width: 66.6666666667% !important;
}

.u-3\/3 {
  width: 100% !important;
}

.u-1\/4 {
  width: 25% !important;
}

.u-2\/4 {
  width: 50% !important;
}

.u-3\/4 {
  width: 75% !important;
}

.u-4\/4 {
  width: 100% !important;
}

.u-1\/5 {
  width: 20% !important;
}

.u-2\/5 {
  width: 40% !important;
}

.u-3\/5 {
  width: 60% !important;
}

.u-4\/5 {
  width: 80% !important;
}

.u-5\/5 {
  width: 100% !important;
}

@media (min-width: 45em) {
  .u-1\/1\@medium {
    width: 100% !important;
  }

  .u-1\/2\@medium {
    width: 50% !important;
  }

  .u-2\/2\@medium {
    width: 100% !important;
  }

  .u-1\/3\@medium {
    width: 33.3333333333% !important;
  }

  .u-2\/3\@medium {
    width: 66.6666666667% !important;
  }

  .u-3\/3\@medium {
    width: 100% !important;
  }

  .u-1\/4\@medium {
    width: 25% !important;
  }

  .u-2\/4\@medium {
    width: 50% !important;
  }

  .u-3\/4\@medium {
    width: 75% !important;
  }

  .u-4\/4\@medium {
    width: 100% !important;
  }

  .u-1\/5\@medium {
    width: 20% !important;
  }

  .u-2\/5\@medium {
    width: 40% !important;
  }

  .u-3\/5\@medium {
    width: 60% !important;
  }

  .u-4\/5\@medium {
    width: 80% !important;
  }

  .u-5\/5\@medium {
    width: 100% !important;
  }
}
@media (min-width: 60em) {
  .u-1\/1\@large {
    width: 100% !important;
  }

  .u-1\/2\@large {
    width: 50% !important;
  }

  .u-2\/2\@large {
    width: 100% !important;
  }

  .u-1\/3\@large {
    width: 33.3333333333% !important;
  }

  .u-2\/3\@large {
    width: 66.6666666667% !important;
  }

  .u-3\/3\@large {
    width: 100% !important;
  }

  .u-1\/4\@large {
    width: 25% !important;
  }

  .u-2\/4\@large {
    width: 50% !important;
  }

  .u-3\/4\@large {
    width: 75% !important;
  }

  .u-4\/4\@large {
    width: 100% !important;
  }

  .u-1\/5\@large {
    width: 20% !important;
  }

  .u-2\/5\@large {
    width: 40% !important;
  }

  .u-3\/5\@large {
    width: 60% !important;
  }

  .u-4\/5\@large {
    width: 80% !important;
  }

  .u-5\/5\@large {
    width: 100% !important;
  }
}
/* ==========================================================================
   TRUMPS / SPACINGS
   ========================================================================== */
/**
 * Utility classes to put specific spacing values onto elements. The below loop
 * will generate us a suite of classes like:
 *
 *   .u-margin-top {}
 *   .u-padding-left-large {}
 *   .u-margin-right-small {}
 *   .u-padding {}
 *   .u-padding-right-none {}
 */
.u-margin {
  margin: 1.5rem !important;
}

.u-margin--tiny {
  margin: 0.375rem !important;
}

.u-margin--small {
  margin: 0.75rem !important;
}

.u-margin--large {
  margin: 2.25rem !important;
}

.u-margin--huge {
  margin: 3rem !important;
}

.u-margin--none {
  margin: 0rem !important;
}

.u-margin-top {
  margin-top: 1.5rem !important;
}

.u-margin-top--tiny {
  margin-top: 0.375rem !important;
}

.u-margin-top--small {
  margin-top: 0.75rem !important;
}

.u-margin-top--large {
  margin-top: 2.25rem !important;
}

.u-margin-top--huge {
  margin-top: 3rem !important;
}

.u-margin-top--none {
  margin-top: 0rem !important;
}

.u-margin-right {
  margin-right: 1.5rem !important;
}

.u-margin-right--tiny {
  margin-right: 0.375rem !important;
}

.u-margin-right--small {
  margin-right: 0.75rem !important;
}

.u-margin-right--large {
  margin-right: 2.25rem !important;
}

.u-margin-right--huge {
  margin-right: 3rem !important;
}

.u-margin-right--none {
  margin-right: 0rem !important;
}

.u-margin-bottom {
  margin-bottom: 1.5rem !important;
}

.u-margin-bottom--tiny {
  margin-bottom: 0.375rem !important;
}

.u-margin-bottom--small {
  margin-bottom: 0.75rem !important;
}

.u-margin-bottom--large {
  margin-bottom: 2.25rem !important;
}

.u-margin-bottom--huge {
  margin-bottom: 3rem !important;
}

.u-margin-bottom--none {
  margin-bottom: 0rem !important;
}

.u-margin-left {
  margin-left: 1.5rem !important;
}

.u-margin-left--tiny {
  margin-left: 0.375rem !important;
}

.u-margin-left--small {
  margin-left: 0.75rem !important;
}

.u-margin-left--large {
  margin-left: 2.25rem !important;
}

.u-margin-left--huge {
  margin-left: 3rem !important;
}

.u-margin-left--none {
  margin-left: 0rem !important;
}

.u-padding {
  padding: 1.5rem !important;
}

.u-padding--tiny {
  padding: 0.375rem !important;
}

.u-padding--small {
  padding: 0.75rem !important;
}

.u-padding--large {
  padding: 2.25rem !important;
}

.u-padding--huge {
  padding: 3rem !important;
}

.u-padding--none {
  padding: 0rem !important;
}

.u-padding-top {
  padding-top: 1.5rem !important;
}

.u-padding-top--tiny {
  padding-top: 0.375rem !important;
}

.u-padding-top--small {
  padding-top: 0.75rem !important;
}

.u-padding-top--large {
  padding-top: 2.25rem !important;
}

.u-padding-top--huge {
  padding-top: 3rem !important;
}

.u-padding-top--none {
  padding-top: 0rem !important;
}

.u-padding-right {
  padding-right: 1.5rem !important;
}

.u-padding-right--tiny {
  padding-right: 0.375rem !important;
}

.u-padding-right--small {
  padding-right: 0.75rem !important;
}

.u-padding-right--large {
  padding-right: 2.25rem !important;
}

.u-padding-right--huge {
  padding-right: 3rem !important;
}

.u-padding-right--none {
  padding-right: 0rem !important;
}

.u-padding-bottom {
  padding-bottom: 1.5rem !important;
}

.u-padding-bottom--tiny {
  padding-bottom: 0.375rem !important;
}

.u-padding-bottom--small {
  padding-bottom: 0.75rem !important;
}

.u-padding-bottom--large {
  padding-bottom: 2.25rem !important;
}

.u-padding-bottom--huge {
  padding-bottom: 3rem !important;
}

.u-padding-bottom--none {
  padding-bottom: 0rem !important;
}

.u-padding-left {
  padding-left: 1.5rem !important;
}

.u-padding-left--tiny {
  padding-left: 0.375rem !important;
}

.u-padding-left--small {
  padding-left: 0.75rem !important;
}

.u-padding-left--large {
  padding-left: 2.25rem !important;
}

.u-padding-left--huge {
  padding-left: 3rem !important;
}

.u-padding-left--none {
  padding-left: 0rem !important;
}

/* ==========================================================================
   TRUMPS / HELPERS
   ========================================================================== */
/**
 * A series of classes to use arbitrarily.
 */
/**
 * Basic positioning to alter the default document flow.
 */
.u-static {
  position: static;
}

.u-relative {
  position: relative;
}

.u-absolute {
  position: absolute;
}

.u-fixed {
  position: fixed;
}

.u-top-0px {
  top: 0;
}

.u-right-0px {
  right: 0;
}

.u-bottom-0px {
  bottom: 0;
}

.u-left--0px {
  left: 0;
}

.u-inline {
  display: inline;
}

.u-block {
  display: block;
}

.u-inline-block {
  display: inline-block;
}

.u-table {
  display: table;
}

.u-table-cell {
  display: table-cell;
}

.u-overflow-hidden {
  overflow: hidden;
}

.u-overflow-scroll {
  overflow: scroll;
}

.u-overflow-auto {
  overflow: auto;
}

.u-clearfix:after {
  content: "";
  display: table;
  clear: both;
}

.u-centered {
  display: block;
  margin-right: auto;
  margin-left: auto;
}

.u-pushed-right {
  float: right;
}

.u-pulled-left {
  float: left;
}

@media (min-width: 45em) {
  img.u-pushed-right,
  figure.u-pushed-right {
    float: right;
    width: 33.333%;
    margin-left: 1.5rem;
  }

  img.u-pulled-left,
  figure.u-pulled-left {
    float: left;
    width: 33.333%;
    margin-right: 1.5rem;
  }
}
.u-aligned-left {
  text-align: left;
}

.u-aligned-center {
  text-align: center;
}

.u-aligned-right {
  text-align: right;
}

.u-justified {
  text-align: justify;
}

/**
 * Adjust vertical alignment.
 */
.u-aligned-top {
  vertical-align: top;
}

.u-aligned-middle {
  vertical-align: middle;
}

.u-aligned-bottom {
  vertical-align: bottom;
}

.u-aligned-baseline {
  vertical-align: baseline;
}

/**
 * Adjust borders and border radii.
 */
.u-border {
  position: relative;
  border-style: solid;
  border-color: rgba(0, 0, 0, 0.125);
  border-right-width: 1px;
  border-left-width: 1px;
}
.u-border::before {
  content: '';
  position: absolute;
  top: -1px;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: -webkit-linear-gradient(top, transparent 50%, rgba(0, 0, 0, 0.125) 50%);
  background-image: linear-gradient(to bottom, transparent 50%, rgba(0, 0, 0, 0.125) 50%);
  background-position: 0 top;
  background-repeat: repeat-x;
  background-size: 100% 2px;
}
.u-border::after {
  content: '';
  position: absolute;
  top: 100%;
  left: 0;
  width: 100%;
  height: 1px;
  background-image: -webkit-linear-gradient(top, transparent 50%, rgba(0, 0, 0, 0.125) 50%);
  background-image: linear-gradient(to bottom, transparent 50%, rgba(0, 0, 0, 0.125) 50%);
  background-position: 0 bottom;
  background-repeat: repeat-x;
  background-size: 100% 2px;
}

.u-border-right {
  position: relative;
  border-style: solid;
  border-color: rgba(0, 0, 0, 0.125);
  border-right-width: 1px;
}

.u-border-bottom {
  position: relative;
}
.u-border-bottom::after {
  content: '';
  position: absolute;
  top: 100%;
  left: 0;
  width: 100%;
  height: 1px;
  background-image: -webkit-linear-gradient(top, transparent 50%, rgba(0, 0, 0, 0.125) 50%);
  background-image: linear-gradient(to bottom, transparent 50%, rgba(0, 0, 0, 0.125) 50%);
  background-position: 0 100%;
  background-repeat: repeat-x;
  background-size: 100% 2px;
}

.u-border-left {
  position: relative;
  border-style: solid;
  border-color: rgba(0, 0, 0, 0.125);
  border-left-width: 1px;
}

.u-border-right--none {
  border-right: 0;
}

.u-border-bottom--none {
  border-bottom: 0;
}

.u-border-left--none {
  border-left: 0;
}

.u-not-bordered {
  border: 0;
}

.u-rounded {
  border-radius: 3px;
}

.u-rounded-top {
  border-radius: 3px 3px 0 0;
}

.u-rounded-right {
  border-radius: 0 3px 3px 0;
}

.u-rounded-bottom {
  border-radius: 0 0 3px 3px;
}

.u-rounded-left {
  border-radius: 3px 0 0 3px;
}

.u-not-rounded {
  border-radius: 0;
}

.u-circle {
  border-radius: 50%;
}

/**
 * Adjust the type of list-item marker.
 */
.u-list-circle {
  list-style-type: circle;
}

.u-list-disc {
  list-style-type: disc;
}

.u-list-square {
  list-style-type: square;
}

.u-list-decimal {
  list-style-type: decimal;
}

.u-list-leading-zero {
  list-style-type: decimal-leading-zero;
}

.u-list-lower-alpha {
  list-style-type: lower-alpha;
}

.u-list-upper-alpha {
  list-style-type: upper-alpha;
}

.u-list-lower-roman {
  list-style-type: lower-roman;
}

.u-list-upper-roman {
  list-style-type: upper-roman;
}

/**
 * Adjust typographic weights and styles.
 */
.u-serif {
  font-family: Georgia, Times, "Times New Roman", serif;
}

.u-sans-serif {
  font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;
}

.u-thin {
  font-weight: 100;
}

.u-light {
  font-weight: 300;
}

.u-regular {
  font-weight: 400;
}

.u-medium {
  font-weight: 600;
}

.u-bold {
  font-weight: 700;
}

.u-ultra-bold {
  font-weight: 900;
}

.u-normal {
  font-style: normal;
}

.u-italic {
  font-style: italic;
}

.u-oblique {
  font-style: oblique;
}

.u-uppercase {
  text-transform: uppercase;
}

.u-lowercase {
  text-transform: lowercase;
}

.u-underline {
  text-decoration: underline;
  color: inherit;
}

.u-not-underlined {
  text-decoration: none;
}

.u-overline {
  text-decoration: overline;
  color: inherit;
}

.u-line-through {
  text-decoration: line-through;
  color: inherit;
}

.u-no-wrap {
  white-space: nowrap;
}

.u-break-word {
  word-wrap: break-word;
}

/* ==========================================================================
   TRUMPS / SHOW-HIDE
   ========================================================================== */
.u-text-hidden {
  font: 0/0 a;
  text-shadow: none;
  color: transparent;
  background-color: transparent;
  border: 0;
}

.u-shown {
  display: block !important;
}

.u-hidden {
  display: none !important;
}

.u-visible {
  visibility: visible !important;
}

.u-invisible {
  visibility: hidden !important;
}

.u-off-screen {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  padding: 0 !important;
  border: 0 !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@media (min-width: 30em) {
  .u-hide\@small {
    position: absolute !important;
    width: 1px !important;
    height: 1px !important;
    margin: -1px !important;
    padding: 0 !important;
    border: 0 !important;
    clip: rect(0 0 0 0) !important;
    overflow: hidden !important;
  }
}
@media (min-width: 45em) {
  .u-hide\@medium {
    position: absolute !important;
    width: 1px !important;
    height: 1px !important;
    margin: -1px !important;
    padding: 0 !important;
    border: 0 !important;
    clip: rect(0 0 0 0) !important;
    overflow: hidden !important;
  }
}
@media (min-width: 60em) {
  .u-hide\@large {
    position: absolute !important;
    width: 1px !important;
    height: 1px !important;
    margin: -1px !important;
    padding: 0 !important;
    border: 0 !important;
    clip: rect(0 0 0 0) !important;
    overflow: hidden !important;
  }
}
@media (min-width: 80em) {
  .u-hide\@huge {
    position: absolute !important;
    width: 1px !important;
    height: 1px !important;
    margin: -1px !important;
    padding: 0 !important;
    border: 0 !important;
    clip: rect(0 0 0 0) !important;
    overflow: hidden !important;
  }
}
/* ==========================================================================
   TRUMPS / PRINT
   ========================================================================== */
/**
 * Very crude, reset-like styles taken from the HTML5 Boilerplate:
 * https://github.com/h5bp/html5-boilerplate/blob/3c3c5e64604209a4d63e1e4c48dd245d45fadfd9/css/main.css#L200-L234
 */
@media print {
  * {
    background: transparent !important;
    color: #000 !important;
    /* Black prints faster: h5bp.com/s */
    box-shadow: none !important;
    text-shadow: none !important;
  }

  a,
  a:visited {
    text-decoration: underline;
  }

  a[href]:after {
    content: " (" attr(href) ")";
  }

  abbr[title]:after {
    content: " (" attr(title) ")";
  }

  /**
   * Don’t show links that are fragment identifiers, or use the `javascript:`
   * pseudo protocol.
   */
  a[href^="#"]:after,
  a[href^="javascript:"]:after {
    content: "";
  }
}
